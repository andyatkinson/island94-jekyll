<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Island94.org</title>
    <description>A Lost and Found
</description>
    <link>http://island94.org/</link>
    <atom:link href="http://island94.org/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 28 Oct 2020 00:22:13 +0000</pubDate>
    <lastBuildDate>Wed, 28 Oct 2020 00:22:13 +0000</lastBuildDate>
    <generator>Jekyll v3.8.7</generator>
    
      <item>
        <title>The furthest to go in efforts to reach their full humanity</title>
        <description>&lt;p&gt;Tawana ‚ÄúHoneycomb‚Äù Petty writing in a &lt;a href=&quot;https://riverwisedetroit.org/article/mama-lila-cabbil-tribute-pushing-us-toward-deeper-thought-still/&quot;&gt;‚ÄúMama Lila Cabbil Tribute: Pushing Us Toward Deeper Thought, Still‚Äù&lt;/a&gt;, published in Riverwise Magazine.&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;Through my organizing and teaching, I have asked that anti-racist circles step away from performative testimonials of privilege for whites and lack of privilege for Black and Brown people. I have asked that all allies move from ally-ship towards co-liberation, with the belief that we can only make systemic change if we understand our liberation is tied up with one another‚Äôs. My historical and current analysis of this moment pushes me to interrogate the notion that (most) white people ‚Äúbenefit‚Äù from their forced relationship with white supremacy.&lt;/p&gt;

  &lt;p&gt;I have asked that white allies (aspiring co-liberators) seek to understand the impact that the myth of white superiority and the system of white supremacy has had on their own communities. I have asked them to deal with school shootings in their communities, opioid abuse, domestic violence, and rising incidents of suicide. I have asked them if they truly believe what they say when they testify to their privilege.&lt;/p&gt;

  &lt;p&gt;For many, this way of thinking may not appear to answer the questions that plague Black and Brown people in America. However, I am of the mindset that a dehumanized being cannot see another as fully human. I am of the mindset that the white children who are shooting up schools have fallen victim to trying to live up to the myth of white superiority.&lt;/p&gt;

  &lt;p&gt;White men, even in progressive circles, are taught they are superior to white women, Black women, and every other living being on the planet. What would it mean for the anti-racism movement to teach white men that they have the furthest to go in efforts to reach their full humanity? What would it look like if they don‚Äôt enter spaces acting inherently superior (privileged), but rather with a lot of work to do to shed the legacy of violence that comes with their perception of superiority?&lt;/p&gt;

&lt;/blockquote&gt;
</description>
        <pubDate>Wed, 28 Oct 2020 00:14:00 +0000</pubDate>
        <link>http://island94.org/2020/10/the-furthest-to-go-in-efforts-to-reach-their-full-humanity</link>
        <guid isPermaLink="true">http://island94.org/2020/10/the-furthest-to-go-in-efforts-to-reach-their-full-humanity</guid>
        
        
      </item>
    
      <item>
        <title>The sublime</title>
        <description>&lt;p&gt;From Susan Casey‚Äôs &lt;em&gt;The wave&lt;/em&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Teahupoo, with its timeless power, brought to mind the age-old philosophical quest to distinguish between beauty and its twisted cousin, the sublime: for the merely pretty to graduate to the sublime, terror was required in the mix. ‚ÄúThe Alps fill the mind with a kind of agreeable horror,‚Äù wrote one seventeenth-century thinker, summing up the concept. And while humans were capable of creating the lovely, the dramatic, the sad, or the inspiring, only nature could produce the sublime. It was a concept both comforting and disturbing: there are many things out there more powerful than we are. No one was more aware of this than the men who‚Äôd ridden Teahupoo on this day (except, perhaps, the ones who had fallen on it).&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sun, 25 Oct 2020 23:46:00 +0000</pubDate>
        <link>http://island94.org/2020/10/the-sublime</link>
        <guid isPermaLink="true">http://island94.org/2020/10/the-sublime</guid>
        
        
      </item>
    
      <item>
        <title>Centering Civic Tech</title>
        <description>&lt;p&gt;From Cyd Harrell‚Äôs excellent &lt;a href=&quot;https://cydharrell.com/book/&quot;&gt;‚ÄúA Civic Technoligists Practice Guide‚Äù&lt;/a&gt;, via a &lt;a href=&quot;https://twitter.com/bensheldon/status/1318348423012102144&quot;&gt;Twitter convo&lt;/a&gt;, reformatted by me:&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;Because its goal is change, civic tech embodies an interesting split between demonstrating and operationalizing the potential of modern tech. I like to call these two branches showing what‚Äôs possible and doing what‚Äôs necessary. Many projects are a mix of the two, but they require different mindsets.&lt;/p&gt;

  &lt;p&gt;‚ÄúShowing what‚Äôs possible‚Äù is about speed, prototyping, design, public feedback, and data. These are often web projects because web tools are great for those purposes.&lt;/p&gt;

  &lt;p&gt;‚ÄúDoing what‚Äôs necessary,‚Äù on the other hand, is about shifting the underlying practices and systems: back-end systems, security, and procurement; hiring and team composition; even shifting budget priorities.‚Äù&lt;/p&gt;

  &lt;p&gt;[‚Ä¶]&lt;/p&gt;

  &lt;p&gt;But our job as civic technologists isn‚Äôt to be the hero of the stories we stumble into halfway through; it‚Äôs to understand and support the people who have already been in place doing the work, and who want to use tech to make improvements.&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;They line up with Code for America‚Äôs pillars of ‚ÄúShow what‚Äôs possible‚Äù, ‚ÄúHelp people do it themselves‚Äù and ‚ÄúBuild a movement‚Äù (though the latter is rather more grandiose than &lt;em&gt;understand and support&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;As we called these in my previous career, Direct Service, Capacity Building, and &lt;a href=&quot;http://putsomegratitudeinyourattitude.com/About.html&quot;&gt;Roy Johnson&lt;/a&gt; (‚ÄúPut some gratitude in your attitude!‚Äù).&lt;/p&gt;
</description>
        <pubDate>Tue, 20 Oct 2020 01:22:00 +0000</pubDate>
        <link>http://island94.org/2020/10/centering-civic-tech</link>
        <guid isPermaLink="true">http://island94.org/2020/10/centering-civic-tech</guid>
        
        
      </item>
    
      <item>
        <title>GoodJob v1.3: Web dashboard and full documentation</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://github.com/bensheldon/good_job&quot;&gt;GoodJob&lt;/a&gt; version 1.3 is released. GoodJob is a multithreaded, Postgres-based, ActiveJob backend for Ruby on Rails. If you‚Äôre new to GoodJob, read the &lt;a href=&quot;https://island94.org/2020/07/introducing-goodjob-1-0&quot;&gt;introductory blog post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;GoodJob‚Äôs v1.3 release adds a mountable Web Dashboard and improved README documentation and complete code-level YARD documentation.&lt;/p&gt;

&lt;p&gt;Version 1.3‚Äôs release comes five weeks after v1.2 and three months after GoodJob‚Äôs initial v1.0 release.&lt;/p&gt;

&lt;h2 id=&quot;shoutouts-&quot;&gt;Shoutouts üôå&lt;/h2&gt;

&lt;p&gt;GoodJob has accepted contributions from 9 people total, and currently has 559 stars on Github. The project just passed 150 combined Issues and Pull Requests.&lt;/p&gt;

&lt;p&gt;I‚Äôm grateful for everyone who has reached out to me on &lt;a href=&quot;https://www.rubyonrails.link/&quot;&gt;Ruby on Rails Link Slack (@bensheldon)&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/bensheldon&quot;&gt;Twitter (@bensheldon)&lt;/a&gt;üôè&lt;/p&gt;

&lt;h2 id=&quot;mountable-web-dashboard&quot;&gt;Mountable web dashboard&lt;/h2&gt;

&lt;p&gt;GoodJob v1.3 adds a web dashboard for exploring and visualizing job status and queue health.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/uploads/2020-10/good_job-dashboard-mvp.png&quot; alt=&quot;GoodJob Dashboard MVP&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The web dashboard is implemented as an optional Rails::Engine and includes charts and lists of pending jobs.&lt;/p&gt;

&lt;p&gt;I expect the web dashboard to be a hot area of ongoing improvement. This initial release contains a minimum functional interface, a chart, and some necessities like keyset pagination. The dashboard is familiar to develop (Rails Controllers, ERB Views and ActiveRecord), and I‚Äôve adopted Bootstrap CSS and Chartist to ease and speed development.&lt;/p&gt;

&lt;h2 id=&quot;improved-documentation&quot;&gt;Improved documentation&lt;/h2&gt;

&lt;p&gt;GoodJob‚Äôs README has been edited and rewritten for clarity and comprehensiveness, and GoodJob‚Äôs implementation code is now thoroughly documented with YARD.&lt;/p&gt;

&lt;p&gt;Good documentation is vital for open source projects like GoodJob. I worked with &lt;a href=&quot;https://robbrackett.com/&quot;&gt;Rob Brackett&lt;/a&gt;, who consults on complex software and open source challenges.&lt;/p&gt;

&lt;h2 id=&quot;upcoming&quot;&gt;Upcoming&lt;/h2&gt;

&lt;p&gt;In the next release, v1.4, I plan to continue adding views and charts to the web dashboard and improving thread management.&lt;/p&gt;

&lt;h2 id=&quot;contribute&quot;&gt;Contribute&lt;/h2&gt;

&lt;p&gt;Code, documentation, and curiosity-based contributions are welcome! Check out the &lt;a href=&quot;https://github.com/bensheldon/good_job/projects/1&quot;&gt;GoodJob Backlog&lt;/a&gt;, comment on or open a Github Issue, or make a Pull Request.&lt;/p&gt;

&lt;p&gt;I also have a &lt;a href=&quot;https://github.com/sponsors/bensheldon&quot;&gt;GitHub Sponsors Profile&lt;/a&gt; if you‚Äôre able to support GoodJob and me monetarily. It helps me stay in touch and send you project updates too.&lt;/p&gt;
</description>
        <pubDate>Mon, 05 Oct 2020 18:24:00 +0000</pubDate>
        <link>http://island94.org/2020/10/goodjob-v1-3-web-dashboard-and-full-documentation</link>
        <guid isPermaLink="true">http://island94.org/2020/10/goodjob-v1-3-web-dashboard-and-full-documentation</guid>
        
        
      </item>
    
      <item>
        <title>Performance facilitators not supervisors</title>
        <description>&lt;p&gt;Doublespeak from Pro-Publica‚Äôs &lt;a href=&quot;https://www.propublica.org/article/meet-the-customer-service-reps-for-disney-and-airbnb-who-have-to-pay-to-talk-to-you&quot;&gt;‚ÄúMeet the Customer Service Reps for Disney and Airbnb Who Have to Pay to Talk to You‚Äù&lt;/a&gt;, via Pluralistic‚Äôs &lt;a href=&quot;https://pluralistic.net/2020/10/02/chickenized-by-arise/#arise&quot;&gt;ongoing chickenization coverage&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;Arise carefully monitors the language agents use to reinforce that it does not have an employment relationship with them. Stung by lawsuits that claimed Arise had actually employed agents but didn‚Äôt pay them fairly, Arise‚Äôs legal department has become a kind of word police, one former staffer told ProPublica.&lt;/p&gt;

  &lt;p&gt;‚ÄúYou don‚Äôt schedule ‚Äòhours,‚Äô you schedule ‚Äòintervals,‚Äô‚Äù the former staffer said. Agents were not to be addressed as ‚Äúyou,‚Äù but ‚Äúyour business.‚Äù They were not ‚Äúworking,‚Äù they were ‚Äúservicing.‚Äù There were no ‚Äúsupervisors,‚Äù only ‚Äúperformance facilitators.‚Äù Agents were not ‚Äúcoached.‚Äù Rather, their services were ‚Äúenhanced.‚Äù&lt;/p&gt;

  &lt;p&gt;Once, an Arise manager, testifying in an arbitration hearing, was asked about meetings that performance facilitators have with agents. ‚ÄúThey‚Äôre not meetings,‚Äù he said. ‚ÄúThey‚Äôre informational sessions, or hosts.‚Äù&lt;/p&gt;

  &lt;p&gt;In an internal announcement in 2012, Arise listed ‚Äúnew terminology‚Äù for eight terms to avoid ‚Äúthe misconception‚Äù that agents are Arise employees. The corporate link between Arise and the agents went from being called Virtual Services Corporations to Independent Businesses. Service Fees became Service Revenue. Central Operations became Support Operations.&lt;/p&gt;

  &lt;p&gt;Arise seems particularly unable to settle on a term for the agents. Early on, the company called each a CyberAgent. Later came Arise Certified Professional. In 2012, that was changed to Client Support Professional. Nowadays, Arise‚Äôs website calls agents ‚Äúonshore brand advocates or Service Partners.‚Äù&lt;/p&gt;

  &lt;p&gt;‚ÄúArise-speak,‚Äù as one opposing attorney called it in legal proceedings, could be a wonder to behold. Client Support Professionals (CSPs) would work with Quality Assurance Performance Facilitators (QAPFs) in a Performance Enhancement Session (PES), or they might reach out to Chat Performance Facilitators or Escalation Performance Facilitators, and none would be an Arise employee, all would be independent contractors.&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;And a disturbing exchange:&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;Rice said he worked out of his bedroom, in his mother‚Äôs home, helping customers for Arise‚Äôs clients, including Barnes &amp;amp; Noble, Disney and Sears. While testifying, Rice referred to performance facilitators in the Arise network as supervisors. This elicited a challenge from a lawyer for Arise.&lt;/p&gt;

  &lt;p&gt;‚ÄúWhere‚Äôd you get that term from, supervisor?‚Äù the lawyer asked.&lt;/p&gt;

  &lt;p&gt;‚ÄúGrowing up in America,‚Äù Rice said. ‚ÄúThat‚Äôs the term people use for people that are above you.‚Äù&lt;/p&gt;

  &lt;p&gt;‚Äú‚Ä¶ You never referred to them as supervisors while you were providing services, did you?‚Äù&lt;/p&gt;

  &lt;p&gt;‚ÄúWell, yeah,‚Äù Rice said.&lt;/p&gt;

  &lt;p&gt;‚ÄúYou did? To who?‚Äù&lt;/p&gt;

  &lt;p&gt;‚ÄúWell, obviously I‚Äôm on the phone with a customer, I‚Äôm not going to say, ‚ÄòOK, let me go check my chat performance facilitator.‚Äô Usually I just said, you know, ‚ÄòLet me just talk to my supervisor.‚Äô‚Äù&lt;/p&gt;

&lt;/blockquote&gt;
</description>
        <pubDate>Fri, 02 Oct 2020 23:56:00 +0000</pubDate>
        <link>http://island94.org/2020/10/performance-facilitators-not-supervisors</link>
        <guid isPermaLink="true">http://island94.org/2020/10/performance-facilitators-not-supervisors</guid>
        
        
      </item>
    
      <item>
        <title>Respect our vendors</title>
        <description>&lt;p&gt;&lt;img src=&quot;/uploads/2020-09/costco_mission.jpg&quot; alt=&quot;Costco Values&quot; /&gt;&lt;/p&gt;

&lt;p&gt;‚ÄúRespect our vendors‚Äù is foreign enough to me in software engineering that I  took this picture of Costco‚Äôs values. The opposite of respect, perhaps ‚Äúcontempt for vendors and tools,‚Äù seems endemic.&lt;/p&gt;

&lt;p&gt;At one job, memorably, a coworker was fired over it. Our engineering team had a shared email list used when setting up root accounts on various 3rd party services, including our primary infrastructure vendor for whom we were one of their largest customers.&lt;/p&gt;

&lt;p&gt;The infrastructure vendor sent a Net-Promoter Score-like survey to our shared email list. Receiving this kind of marketing junk was frequent enough that I ignored it, but my colleague filled it out:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;On a scale of 1-10, how likely are you to recommend our service?: ‚Äú1‚Äù&lt;/p&gt;

  &lt;p&gt;Why?: ‚ÄúI hate you.‚Äù&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This survey response led to the vendor‚Äôs account executive making a frantic and fearful call to our leadership team. The blowback of that led to my coworkers‚Äô termination. (This was not my colleague‚Äôs first warning; my team and I were also targets of their trolling and bullying.)&lt;/p&gt;

&lt;p&gt;This is a funny story to reflect on. And it‚Äôs terribly toxic the multitude of things engineers will despise, wear on their sleeve, and eagerly share at the slightest opportunity, myself included.&lt;/p&gt;
</description>
        <pubDate>Tue, 22 Sep 2020 14:57:00 +0000</pubDate>
        <link>http://island94.org/2020/09/respect-our-vendors</link>
        <guid isPermaLink="true">http://island94.org/2020/09/respect-our-vendors</guid>
        
        
      </item>
    
      <item>
        <title>GoodJob v1.2: Multithreaded queue isolation and LISTEN/NOTIFY</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://github.com/bensheldon/good_job&quot;&gt;GoodJob&lt;/a&gt; version 1.2 has been released. GoodJob is a multithreaded, Postgres-based, ActiveJob backend for Ruby on Rails. If you‚Äôre new to GoodJob, read the &lt;a href=&quot;https://island94.org/2020/07/introducing-goodjob-1-0&quot;&gt;introductory blog post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;GoodJob‚Äôs v1.2 release adds  multithreaded queue isolation for easier congestion management, and usage of Postgres LISTEN/NOTIFY to greatly reduce queue latency.&lt;/p&gt;

&lt;p&gt;Version 1.2 comes out 2 weeks after GoodJob v1.1, and 5 weeks after GoodJob‚Äôs initial v1.0 release.&lt;/p&gt;

&lt;h2 id=&quot;multithreaded-queue-isolation&quot;&gt;Multithreaded queue isolation&lt;/h2&gt;

&lt;p&gt;GoodJob v1.2 adds multithreaded queue isolation for easier congestion management. Queue isolation ensures that slow, long-running jobs do not block the execution of higher priority jobs.&lt;/p&gt;

&lt;p&gt;Achieving queue isolation has always been possible by running multiple processes, but GoodJob v1.2 makes it easy to configure multiple isolated thread-pools within a single process.&lt;/p&gt;

&lt;p&gt;For example, to create a pool of 2 threads working from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mice&lt;/code&gt; queue, and 1 thread working from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;elephants&lt;/code&gt; queue:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;good_job &lt;span class=&quot;nt&quot;&gt;--queues&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mice:2;elephants:1&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Or via an environment variable:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ GOOD_JOB_QUEUS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mice:2;elephants:1&quot;&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;good_job
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Additional examples and syntax:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--queues=*:2;mice,sparrows:1&lt;/code&gt; will create two thread-pools, one running jobs on any queue, and another dedicated to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mice&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sparrows&lt;/code&gt; queued jobs.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--queues=-elephants,whales:2;elephants,whales:1&lt;/code&gt; will create two thread-pools, one running jobs from any queue &lt;em&gt;except&lt;/em&gt; the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;elephants&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;whales&lt;/code&gt;, and another dedicated to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;elephants&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;whales&lt;/code&gt; queued jobs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;listennotify&quot;&gt;LISTEN/NOTIFY&lt;/h2&gt;

&lt;p&gt;GoodJob now uses Postgres LISTEN/NOTIFY to push newly enqueued jobs for immediate execution.  LISTEN/NOTIFY greatly reduces queue latency, the time between when a job is enqueued and execution begins.&lt;/p&gt;

&lt;p&gt;LISTEN/NOTIFY works alongside GoodJob‚Äôs polling mechanism.  Together, jobs queued for immediate execution (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ExampleJob.perform_later&lt;/code&gt;) are executed immediately, while future scheduled jobs (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ExampleJob.set(wait: 1.hour).perform_later&lt;/code&gt;) are executed at (or near) their set time.&lt;/p&gt;

&lt;h2 id=&quot;upcoming&quot;&gt;Upcoming&lt;/h2&gt;

&lt;p&gt;In the next release, v1.3, I plan to include a simple web dashboard for inspecting job execution performance, and focus on improving GoodJob‚Äôs documentation.&lt;/p&gt;

&lt;h2 id=&quot;contribute&quot;&gt;Contribute&lt;/h2&gt;

&lt;p&gt;Code, documentation, and curiousity-based contributions are welcome! Check out the &lt;a href=&quot;https://github.com/bensheldon/good_job/projects/1&quot;&gt;GoodJob Backlog&lt;/a&gt;, comment on or open a Github Issue, or make a Pull Request.&lt;/p&gt;

&lt;p&gt;I‚Äôve also set up a &lt;a href=&quot;https://github.com/sponsors/bensheldon&quot;&gt;GitHub Sponsors Profile&lt;/a&gt; if you‚Äôre able to support me and GoodJob monetarily. It helps me stay in touch and send you project updates too.&lt;/p&gt;
</description>
        <pubDate>Thu, 20 Aug 2020 03:51:00 +0000</pubDate>
        <link>http://island94.org/2020/08/goodjob-v1-2-multithreaded-queue-isolation-and-listen-notify</link>
        <guid isPermaLink="true">http://island94.org/2020/08/goodjob-v1-2-multithreaded-queue-isolation-and-listen-notify</guid>
        
        
      </item>
    
      <item>
        <title>GoodJob v1.1: async and improved documentation</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://github.com/bensheldon/good_job&quot;&gt;GoodJob&lt;/a&gt; version 1.1 has been released. GoodJob is a multithreaded, Postgres-based, ActiveJob backend for Ruby on Rails. If you‚Äôre new to GoodJob, read the &lt;a href=&quot;https://island94.org/2020/07/introducing-goodjob-1-0&quot;&gt;introductory blog post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;GoodJob‚Äôs v1.1 release contains a new, economical execution mode called ‚Äúasync‚Äù to execute jobs within the webserver process with the same reliability as a separate job worker process.&lt;/p&gt;

&lt;p&gt;This release also contains more in-depth documentation based on feedback and questions I‚Äôve received since the v1.0 release.&lt;/p&gt;

&lt;p&gt;Version 1.1 comes out 3 weeks after GoodJob v1.0. The initial release of GoodJob was featured on &lt;a href=&quot;https://rubyweekly.com/issues/511&quot;&gt;Ruby Weekly&lt;/a&gt;, &lt;a href=&quot;https://afreshcup.com/home/2020/07/30/double-shot-2651&quot;&gt;A Fresh Cup&lt;/a&gt;, &lt;a href=&quot;https://ruby.libhunt.com/newsletter/219&quot;&gt;Awesome Ruby&lt;/a&gt;, and was as high as #8 on &lt;a href=&quot;https://news.ycombinator.com/item?id=23928891&quot;&gt;Hacker News&lt;/a&gt;. GoodJob has since received nearly &lt;a href=&quot;https://github.com/bensheldon/good_job&quot;&gt;500 stars on Github&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;async-mode&quot;&gt;Async mode&lt;/h2&gt;
&lt;p&gt;In addition to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ good_job&lt;/code&gt; executable, GoodJob now can execute jobs inside the webserver process itself. For light workloads and simple applications, combining web and worker into a single process is very economical, especially when running on Heroku‚Äôs free or hobby plans.&lt;/p&gt;

&lt;p&gt;GoodJob‚Äôs async execution is compatible with Puma, in multithreaded (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RAILS_MAX_THREADS&lt;/code&gt;), multi-process (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WEB_CONCURRENCY&lt;/code&gt;), and memory efficient &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;preload_app!&lt;/code&gt; configurations. GoodJob is built with Concurrent Ruby which offers excellent thread and process-forking safety guarantees. Read the &lt;a href=&quot;https://github.com/bensheldon/good_job#executing-jobs-async--in-process&quot;&gt;GoodJob async documentation&lt;/a&gt; for more details.&lt;/p&gt;

&lt;p&gt;On a personal level, I‚Äôm very excited to have this feature in GoodJob. Async execution was &lt;em&gt;the&lt;/em&gt; compelling reason I had previously adopted Que, another Postgres-based backend, in multiple projects and I was heartbroken when &lt;a href=&quot;https://github.com/que-rb/que/issues/238#issuecomment-480648845&quot;&gt;Que dropped support for async execution&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;improved-documentation&quot;&gt;Improved documentation&lt;/h2&gt;
&lt;p&gt;Since GoodJob was released 3 weeks ago, the documentation has been significantly expanded. It contains more code and examples for ensuring reliability and handling job errors. I‚Äôve had dozens of people ask questions through &lt;a href=&quot;https://github.com/bensheldon/good_job/issues&quot;&gt;Github Issues&lt;/a&gt; and &lt;a href=&quot;https://www.rubyonrails.link&quot;&gt;Ruby on Rails Link Slack&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;upcoming&quot;&gt;Upcoming&lt;/h2&gt;
&lt;p&gt;In the next release, v1.2, I plan to simplify the creation of multiple dedicated threadpools within a single process. The goal is to provide an economical solution to congestion when the execution of a number of slow, low-priority jobs (elephants) are being performed and there are no execution resources available for newly introduced fast, high priority jobs (mice) until the currently executing elephants complete.&lt;/p&gt;

&lt;p&gt;A proposed configuration, for example:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--queues=mice:2,elephants:4&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;‚Ä¶would allocate 2 dedicated threads for jobs enqueued on the mice queue, and 4 threads for the elephants queue. Learn more in the &lt;a href=&quot;https://github.com/bensheldon/good_job/issues/45&quot;&gt;feature‚Äôs Github Issue&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;contribute&quot;&gt;Contribute&lt;/h2&gt;
&lt;p&gt;GoodJob continues to be enjoyable to develop and build upon Rails‚Äô ActiveJob and Concurrent Ruby. Contributions are welcomed: check out the &lt;a href=&quot;https://github.com/bensheldon/good_job/projects/1&quot;&gt;GoodJob Backlog&lt;/a&gt;, comment on or open a Github Issue, or make a Pull Request.&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Aug 2020 03:49:00 +0000</pubDate>
        <link>http://island94.org/2020/08/goodjob-v1-1-async-and-improved-documentation</link>
        <guid isPermaLink="true">http://island94.org/2020/08/goodjob-v1-1-async-and-improved-documentation</guid>
        
        
      </item>
    
      <item>
        <title>Introducing GoodJob 1.0, a new Postgres-based, multithreaded, ActiveJob backend for Ruby on Rails</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://github.com/bensheldon/good_job&quot;&gt;GoodJob&lt;/a&gt; is a new Postgres-based, multithreaded, second-generation ActiveJob backend for Ruby on Rails.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Inspired by Delayed::Job and Que, &lt;a href=&quot;https://github.com/bensheldon/good_job&quot;&gt;GoodJob&lt;/a&gt; is designed for maximum compatibility with Ruby on Rails, ActiveJob, and Postgres to be simple and performant for most workloads.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Designed for ActiveJob.&lt;/strong&gt; Complete support for async, queues, delays, priorities, timeouts, and retries with near-zero configuration.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Built for Rails.&lt;/strong&gt; Fully adopts Ruby on Rails threading and code execution guidelines with Concurrent::Ruby.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Backed by Postgres.&lt;/strong&gt; Relies upon Postgres integrity and session-level Advisory Locks to provide run-once safety and stay within the limits of schema.rb.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;For most workloads.&lt;/strong&gt; Targets full-stack teams, economy-minded solo developers, and applications that enqueue less than 1-million jobs/day.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/bensheldon/good_job&quot;&gt;Visit Github for instructions on adding GoodJob to your Rails application&lt;/a&gt; , or read on for the story behind GoodJob.&lt;/p&gt;

&lt;h3 id=&quot;a-second-generation-activejob-backend&quot;&gt;A ‚ÄúSecond-generation‚Äù ActiveJob backend&lt;/h3&gt;

&lt;p&gt;Why ‚Äúsecond-generation*‚Äù? GoodJob is designed from the beginning to be an ActiveJob-backend in a conventional Ruby on Rails application.&lt;/p&gt;

&lt;p&gt;First-generation ActiveJob backends, like Delayed::Job and Que, all predate ActiveJob and support non-Rails applications. First-generation ActiveJob backends are significantly more complex than GoodJob because they separately maintain a lot of functionality that comes with a conventional Rails installation (ActiveRecord, ActiveSupport, Concurrent::Ruby) and re-implement job lifecycle hooks so they can work apart from ActiveJob. I‚Äôve observed that this can make them slow to keep up with major Rails changes. An impetus for GoodJob was reviewing the number of outages, blocked upgrades, and forks of first-generation backends I‚Äôve managed during both major and minor Rails upgrades over the years.&lt;/p&gt;

&lt;p&gt;As a second-generation ActiveJob backend, GoodJob can draft off of all the advances and solved problems of ActiveJob and Ruby on Rails. For example &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rescue_from&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;retry_on&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;discard_on&lt;/code&gt; are all implemented already by ActiveJob.&lt;/p&gt;

&lt;p&gt;GoodJob is significantly thinner than first-generation backends, and over the long run hopefully easier to maintain and keep up with changes to Ruby on Rails. For example, GoodJob is currently ~600 lines of code, whereas Que is ~1,200 lines, and Delayed::Job is ~2,300 lines (2,000 for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delayed_job&lt;/code&gt;, and an additional 300 for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delayed_job_active_record&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;*‚ÄúSecond generation‚Äù was coined for me by Daniel Lopez on &lt;a href=&quot;https://rubyonrails-link.slack.com/archives/C0GB80GRE/p1594860261410500&quot;&gt;Ruby on Rails Link Slack&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;postgres-based&quot;&gt;Postgres-based&lt;/h3&gt;

&lt;p&gt;I love Postgres. Postgres offers a lot of features, has safety and integrity guarantees, and simply running fewer services (skipping Redis) means less complexity in development and production.&lt;/p&gt;

&lt;p&gt;GoodJob builds atop ActiveRecord. It‚Äôs numbingly boring, in a good way.&lt;/p&gt;

&lt;p&gt;GoodJob uses session-level Advisory Locks to provide run-once guarantees with relatively little performance implications for most workloads.&lt;/p&gt;

&lt;p&gt;GoodJob‚Äôs session-level Advisory Lock implementation is perhaps the only ‚Äúnovel‚Äù aspect, that comes from my experience orchestrating complex web-driving of government systems (‚Äúthe browser is the API‚Äù) for &lt;a href=&quot;https://codeforamerica.org/&quot;&gt;Code for America&lt;/a&gt;. GoodJob uses a Common Table Expression (CTE) to find, lock, and return the next workable job in a single query. Session-level Advisory Locks will gracefully relinquish that lock if interrupted, without having to maintain a transaction for the duration of the job.&lt;/p&gt;

&lt;h3 id=&quot;multi-threaded&quot;&gt;Multi-threaded&lt;/h3&gt;

&lt;p&gt;GoodJob uses &lt;a href=&quot;https://github.com/ruby-concurrency/concurrent-ruby&quot;&gt;Concurrent::Ruby&lt;/a&gt;  to scale and manage jobs across multiple threads. ‚Äú&lt;em&gt;Concurrent Ruby makes one of the strongest thread-safety guarantees of any Ruby concurrency library‚Äù.&lt;/em&gt;  Ruby on Rails has adopted Concurrent Ruby, and GoodJob follows its lead and &lt;a href=&quot;https://guides.rubyonrails.org/threading_and_code_execution.html&quot;&gt;thread-execution and safety guidelines&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In building GoodJob I leaned heavily on my positive experiences running Que, another multithreaded backend, on Heroku. Threads are great for balancing simplicity, economy, and performance for typical IO-bound workloads like heavy database queries, API requests, Selenium web-driving, or sending emails.&lt;/p&gt;

&lt;p&gt;A feature that won‚Äôt be in GoodJob 1.0, but I hope to implement soon, is the ability to run the GoodJob scheduler inside the webserver process (‚Äúasync mode‚Äù). This was a feature  &lt;a href=&quot;https://github.com/que-rb/que/issues/238#issuecomment-480648845&quot;&gt;withdrawn from Que&lt;/a&gt; , but I believe can be safely implemented with Concurrent Ruby. An async mode would offer even greater economy, for example, in Heroku‚Äôs constrained environment.&lt;/p&gt;

&lt;h3 id=&quot;goodjob-is-right-for-me&quot;&gt;GoodJob is right for me&lt;/h3&gt;

&lt;p&gt;GoodJob‚Äôs design is based directly on my experience in 2-pizza, full-stack teams, and as an economy-minded solo developer. GoodJob already powers  &lt;a href=&quot;https://dayoftheshirt.com/&quot;&gt;Day of the Shirt&lt;/a&gt; and &lt;a href=&quot;https://brompt.com/&quot;&gt;Brompt&lt;/a&gt; performing tens-of-thousands of real-world jobs a day.&lt;/p&gt;

&lt;h3 id=&quot;is-goodjob-right-for-you&quot;&gt;Is GoodJob right for you?&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/bensheldon/good_job&quot;&gt;Try it out&lt;/a&gt;  and let me know.&lt;/p&gt;
</description>
        <pubDate>Mon, 20 Jul 2020 21:12:00 +0000</pubDate>
        <link>http://island94.org/2020/07/introducing-goodjob-1-0</link>
        <guid isPermaLink="true">http://island94.org/2020/07/introducing-goodjob-1-0</guid>
        
        
      </item>
    
      <item>
        <title>Retail politics</title>
        <description>&lt;p&gt;I will quote anything that reinforces the necessity of showing up. From SF Weekly‚Äôs &lt;a href=&quot;https://archives.sfweekly.com/sanfrancisco/the-many-faces-of-leland-yee-a-politicians-calculated-rise-and-dramatic-fall/Content?oid=2949247&amp;amp;showFullText=true&quot;&gt;‚ÄúThe Many Faces of Leland Yee: A Politician‚Äôs Calculated Rise and Dramatic Fall‚Äù&lt;/a&gt; :&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;Upon reflection, Yee‚Äôs principles may be ever-shifting and his policies may be decorative, but he found a way around this: by being omnipresent.&lt;/p&gt;

  &lt;p&gt;He knew the name of every neighborhood stalwart from every neighborhood club; he cleaned hundreds of plates at hundreds of Chinatown banquets; he sat through countless community meetings, gathering hundreds of converts at a time: ‚ÄúIn local politics,‚Äù says one longtime player, ‚Äúa cup of coffee and a handshake can win you a friend for life.‚Äù&lt;/p&gt;

  &lt;p&gt;Yee showed up at your kid‚Äôs bar mitzvah or high school graduation; he showed up at your community gathering; he showed up at your neighborhood bazaar ‚Äî in short, he showed up. His staff returned your phone call. And he read your letters: A former associate says Yee never failed to leave the office at the end of a long day toting a thick stack of mail that he made a point of poring through. In insider jargon, this is known as ‚Äúretail politics.‚Äù Few worked harder or did it better.&lt;/p&gt;

&lt;/blockquote&gt;
</description>
        <pubDate>Mon, 13 Jul 2020 02:16:00 +0000</pubDate>
        <link>http://island94.org/2020/07/retail-politics</link>
        <guid isPermaLink="true">http://island94.org/2020/07/retail-politics</guid>
        
        
      </item>
    
  </channel>
</rss>
